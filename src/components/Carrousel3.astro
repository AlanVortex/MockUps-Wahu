---
import willElenco from "../assets/willElenco.jpeg";
import watsonElenco from "../assets/watsonElenco.jpeg";
import starkElenco from "../assets/starkElenco.jpeg";
import rockElenco from "../assets/rockElenco.jpeg";
import eizaElenco from "../assets/eizaElenco.jpeg";

interface Actor {
    src: string;
    alt: string;
    name: string;
    character: string;
}

const actors: Actor[] = [
    { src: willElenco.src, alt: "Will Elenco", name: "Will Smith", character: "Adam" },
    { src: watsonElenco.src, alt: "Watson Elenco", name: "Emma Watson", character: "Eve" },
    { src: starkElenco.src, alt: "Stark Elenco", name: "Robert Downey Jr.", character: "Tony Stark" },
    { src: rockElenco.src, alt: "Rock Elenco", name: "Dwayne Johnson", character: "Hercules" },
    { src: eizaElenco.src, alt: "Eiza Elenco", name: "Eiza González", character: "Santánico Pandemonium" },
    { src: willElenco.src, alt: "Will Elenco", name: "Will Smith", character: "Adam" },
    { src: watsonElenco.src, alt: "Watson Elenco", name: "Emma Watson", character: "Eve" },
    { src: starkElenco.src, alt: "Stark Elenco", name: "Robert Downey Jr.", character: "Tony Stark" },
    { src: rockElenco.src, alt: "Rock Elenco", name: "Dwayne Johnson", character: "Hercules" },
    { src: eizaElenco.src, alt: "Eiza Elenco", name: "Eiza González", character: "Santánico Pandemonium" },
    { src: willElenco.src, alt: "Will Elenco", name: "Will Smith", character: "Adam" },
    { src: watsonElenco.src, alt: "Watson Elenco", name: "Emma Watson", character: "Eve" },
    { src: starkElenco.src, alt: "Stark Elenco", name: "Robert Downey Jr.", character: "Tony Stark" },
    { src: rockElenco.src, alt: "Rock Elenco", name: "Dwayne Johnson", character: "Hercules" },
    { src: eizaElenco.src, alt: "Eiza Elenco", name: "Eiza González", character: "Santánico Pandemonium" },
];
---

<div class="relative mt-6 flex">
    <!-- Botón Izquierdo -->
    <button
        onclick="scrollToLeft('carousel3')"
        class="absolute left-0 h-full w-12 sm:w-18 hover:bg-gradient-to-r from-principal duration-300 bg-opacity-50 text-white p-2 z-10"
        aria-label="Scroll Left"
    >
        <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            fill="none"
            width="36"
            height="36"
            stroke-width="2"
            stroke-linejoin="round"
            stroke-linecap="round"
            stroke="currentColor"
        >
            <path d="M15 6l-6 6l6 6"></path>
        </svg>
    </button>

    <!-- Contenedor del carrusel -->
    <div
        id="carousel3"
        class="flex overflow-x-scroll flex-nowrap gap-3 scrollbar-hide scroll-smooth z-0"
    >
        {actors.map((actor, index) => (
            <div
                class="group relative min-w-[80%] sm:min-w-[calc(100%/3)] md:min-w-[calc(100%/10)] h-64 bg-gray-200 rounded-md overflow-hidden cursor-pointer"
                id={`carousel-item-${index}`}
                onclick="toggleInfo(event, 'info-${index}')"
            >
                <img
                    src={actor.src}
                    alt={actor.alt}
                    class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-125"
                />
                <!-- Información del hover -->
                <div
                    id={`info-${index}`}
                    class="absolute inset-0 bg-black bg-opacity-70 text-white flex flex-col justify-center items-center opacity-0 transition-opacity duration-500 group-hover:opacity-100 group-hover:delay-200"
                >
                    <h2 class="text-lg sm:text-2xl lg:text-4xl font-bold mb-2">{actor.name}</h2>
                    <p class="text-sm">{actor.character}</p>
                </div>
            </div>
        ))}
    </div>

    <!-- Botón Derecho -->
    <button
        onclick="scrollToRight('carousel3')"
        class="absolute h-full w-12 sm:w-18 right-0 hover:bg-gradient-to-l from-principal duration-300 bg-opacity-50 text-white p-2 z-10"
        aria-label="Scroll Right"
    >
        <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-linecap="round"
            stroke-linejoin="round"
            width="36"
            height="36"
            stroke-width="2"
        >
            <path d="M9 6l6 6l-6 6"></path>
        </svg>
    </button>
</div>

<script>
    // Función para alternar la visibilidad del contenido en móviles
    (window as any).toggleInfo = function (event: Event, infoId: string) {
        const infoElement = document.getElementById(infoId);
        const allInfos = document.querySelectorAll('[id^="info-"]'); // Selecciona todos los elementos de información

        // Oculta todas las tarjetas excepto la seleccionada
        allInfos.forEach((info) => {
            if (info.id !== infoId) {
                info.classList.add('opacity-0'); // Oculta otros elementos
            }
        });

        // Alterna la visibilidad del contenido seleccionado
        if (infoElement) {
            const isVisible = !infoElement.classList.contains('opacity-0');
            infoElement.classList.toggle('opacity-0', isVisible); // Alterna visibilidad
        }
    };

    // Función para desplazar a la derecha
    (window as any).scrollToRight = function (carouselId: string) {
        const carousel = document.getElementById(carouselId);
        if (carousel) {
            const scrollAmount = carousel.offsetWidth * 0.8; // Ajusta según el tamaño
            if (carousel.scrollLeft + carousel.clientWidth >= carousel.scrollWidth) {
                carousel.scrollTo({ left: 0, behavior: "smooth" });
            } else {
                carousel.scrollBy({ left: scrollAmount, behavior: "smooth" });
            }
        }
    };

    // Función para desplazar a la izquierda
    (window as any).scrollToLeft = function (carouselId: string) {
        const carousel = document.getElementById(carouselId);
        if (carousel) {
            const scrollAmount = carousel.offsetWidth * 0.8; // Ajusta según el tamaño
            if (carousel.scrollLeft === 0) {
                carousel.scrollTo({ left: carousel.scrollWidth, behavior: "smooth" });
            } else {
                carousel.scrollBy({ left: -scrollAmount, behavior: "smooth" });
            }
        }
    };
</script>